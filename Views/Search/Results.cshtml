@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Search Page";
}
<head>
    <style>
        body {
            margin-top: 20px;
            background: #eee;
        }

        .btn {
            margin-bottom: 5px;
        }

        .grid {
            position: relative;
            width: 100%;
            background: #fff;
            color: #666666;
            border-radius: 2px;
            margin-bottom: 25px;
            box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.1);
        }

            .grid .grid-body {
                padding: 15px 20px 15px 20px;
                font-size: 0.9em;
                line-height: 1.9em;
            }

        .search table tr td.rate {
            color: #f39c12;
            line-height: 50px;
        }

        .search table tr:hover {
            cursor: pointer;
        }

        .search table tr td.image {
            width: 50px;
        }

        .search table tr td img {
            width: 50px;
            height: 50px;
        }

        .search table tr td.rate {
            color: #f39c12;
            line-height: 50px;
        }

        .search table tr td.price {
            font-size: 1.5em;
            line-height: 50px;
        }

        .search #price1,
        .search #price2 {
            display: inline;
            font-weight: 600;
        }
    </style>
</head>

<!-- BEGIN RESULT -->
<div class="col-md-9">
    <h2 style="color:#fb5849"><i class="fa fa-file-o" style="color:#fb5849"></i> Result</h2>
    <hr>

    <div class="padding"></div>
    <br /><br />
    <div class="row">
        <!-- BEGIN ORDER RESULT -->
        <div class="col-sm-6">
            <div class="btn-group">
                <button type="button" class="btn btn-default" style="color:#fb5849">
                    Results <span class="caret"></span>
                </button>
            </div>
        </div>
        <!-- END ORDER RESULT -->
    </div>

    <!-- BEGIN TABLE RESULT -->
    <div class="table-responsive">
        <table class="table table-hover">
            <tr>
                <th></th>
                <th style="color:#fb5849">Name</th>
                <th style="color:#fb5849">Rating</th>
                @if (User.Identity.IsAuthenticated)
                {
                    <th style="color:#fb5849">View</th>
                }
            </tr>
            <tbody id="tableBody">
                @foreach (Restaurant restaurant in Model)
                {
                
                    <tr>
                    <td class="image"><img src="~/images/tasteFinder.png" width="150" alt=""></td>
                        <td class="product"><strong>@restaurant.Name</strong></td>
                        <td class="rate">
                            <span>
                                @{
                                    int stars = Math.Max(1, (int)Math.Round(restaurant.TotalStars / restaurant.WeightedReviewScore * 5));
                                    for (int i = 0; i < stars; i++)
                                    {
                                         <i class="fa fa-star"></i>
                                    }
                                }
                            </span>
                        </td>
                        @if (User.Identity.IsAuthenticated)
                        {

                            <td>
                                <div class="scroll-to-section"><a href="/Search/ProfileView?id=@restaurant.Email">View Profile</a></div>
                            </td>
                            
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <!-- END TABLE RESULT -->
    
</div>
<!-- END RESULT -->


<script>
    let start = 0;
    let currentUrl = window.location.href;
    let table = document.getElementById('tableBody');
    let isFetching = false;


    function getStarsHTML(rating) {
        console.log(rating);
        var amount = Math.round(rating);

        if (amount <= 0 || isNaN(amount)) amount = 1;
        var result = '';
        for (let i = 0; i < amount; i++) {
            result += `<i class="fa fa-star" > </i>`
        }
        return result;
    }

    window.onscroll = function () {
        if ((window.innerHeight + window.scrollY) >= document.body.scrollHeight) {


            if (!isFetching) {
                isFetching = true;
                start += 5;
                // User has reached the end of the page
                fetch(`${currentUrl}&start=${start}`).then(data => data.json()).then(data => {
                    let add = "";
                    
                    for (let i = 0; i < data.$values.length; i++) {
                        let starsHTML = getStarsHTML(Math.max(1, Math.round(5.0 * data.$values[i].totalStars / data.$values[i].weightedReviewScore)));
                        add += `
                            <tr>
                                <td class="image"><img src="/images/tasteFinder.png" width="150" alt=""></td>
                                    <td class="product"><strong>${data.$values[i].name}</strong></td>
                                <td class="rate">
                                    <span>
                                        ${starsHTML}
                                    </span>
                                </td>
                                <td>
                                    <div class="scroll-to-section"><a href="/Search/ProfileView?id=${data.$values[i].email}">View Profile</a></div>
                                </td>
                            </tr>
                        `
                    }
                    table.innerHTML = table.innerHTML + add;
                    isFetching = false;
                }).catch(err => {
                    isFetching = false;
                    console.log(err);
                });
            }


        }

        
    };
</script>
